@name: "通用工具关键字"
@description: "提供常用的工具函数和辅助关键字"
@author: "pytest-dsl团队"
@date: "2024-01-15"

# 定义常用常量
DEFAULT_TIMEOUT = 30
MAX_RETRY_COUNT = 3

# 字符串处理关键字
function 格式化消息 (模板, 变量值) do
    格式化结果 = "${模板}: ${变量值}"
    [打印], 内容: "格式化消息 - ${格式化结果}"
    return ${格式化结果}
end

function 清理字符串 (输入字符串) do
    # 简化的字符串清理，避免使用Python方法调用
    [打印], 内容: "字符串清理: '${输入字符串}'"
    # 直接返回输入字符串，实际项目中可以通过内置关键字实现清理
    return ${输入字符串}
end

# 数据验证关键字
function 验证非空 (值, 字段名="字段") do
    # 简化验证逻辑，避免复杂的字符串转换
    if ${值} == "" do
        错误消息 = "${字段名}不能为空"
        [打印], 内容: "验证失败: ${错误消息}"
        # 返回简单的字典结构
        return "验证失败"
    end
    
    [打印], 内容: "验证通过: ${字段名}值为'${值}'"
    return "验证通过"
end

function 验证邮箱格式 (邮箱地址) do
    # 简化邮箱验证，避免复杂的字符串操作
    [打印], 内容: "验证邮箱: ${邮箱地址}"
    
    # 简单的邮箱格式检查（实际项目中可以使用内置关键字）
    if ${邮箱地址} == "" do
        return "邮箱格式无效"
    end
    
    return "邮箱格式有效"
end

# 等待和重试关键字
function 安全等待 (秒数, 描述="操作") do
    [打印], 内容: "开始等待${秒数}秒 - ${描述}"
    [等待], 秒数: ${秒数}
    [打印], 内容: "等待完成 - ${描述}"
end

# 简单计算关键字
function 简单计算 (数字1, 数字2, 操作="加法") do
    if ${操作} == "加法" do
        结果 = ${数字1} + ${数字2}
    elif ${操作} == "减法" do
        结果 = ${数字1} - ${数字2}
    elif ${操作} == "乘法" do
        结果 = ${数字1} * ${数字2}
    else
        结果 = 0
    end
    
    [打印], 内容: "${数字1} ${操作} ${数字2} = ${结果}"
    return ${结果}
end 