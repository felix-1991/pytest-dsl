@name: "远程执行测试示例"
@description: "演示远程兼容关键字在远程服务器上的执行"
@remote: "http://localhost:8270/" as remote_server

# 测试本地和远程执行的对比
[打印], 内容: "=== 本地与远程执行对比测试 ==="

# 本地执行文件操作
[打印], 内容: "--- 本地执行 ---"
本地写入 = [远程兼容文件操作], 操作类型: "write", 文件路径: "local_test.txt", 文件内容: "本地执行测试"
[打印], 内容: "本地文件写入: ${本地写入}"

本地读取 = [远程兼容文件操作], 操作类型: "read", 文件路径: "local_test.txt"
[打印], 内容: "本地文件读取: ${本地读取['content']}"

# 远程执行相同的文件操作
[打印], 内容: "--- 远程执行 ---"
远程写入 = remote_server|[远程兼容文件操作], 操作类型: "write", 文件路径: "remote_test.txt", 文件内容: "远程执行测试"
[打印], 内容: "远程文件写入: ${远程写入}"

远程读取 = remote_server|[远程兼容文件操作], 操作类型: "read", 文件路径: "remote_test.txt"
[打印], 内容: "远程文件读取: ${远程读取['content']}"

# 验证两种执行方式都成功
[断言], 条件: "${本地写入['success']} == True"
[断言], 条件: "${远程写入['success']} == True"
[断言], 条件: "${本地读取['success']} == True"
[断言], 条件: "${远程读取['success']} == True"

# 测试数据处理的远程执行
[打印], 内容: "=== 远程数据处理测试 ==="

测试数据列表 = ["apple", "banana", "cherry", "date"]

# 在远程服务器上批量处理数据
for 数据项 in ${测试数据列表} do
    处理结果 = remote_server|[远程兼容数据处理], 
        数据: ${数据项}, 
        处理类型: "transform", 
        处理参数: {"type": "upper"}
    
    [打印], 内容: "远程处理 ${数据项} -> ${处理结果['transformed_data']}"
    [断言], 条件: "${处理结果['success']} == True"
end

# 测试远程HTTP请求
[打印], 内容: "=== 远程HTTP请求测试 ==="

# 在远程服务器上发送HTTP请求
远程HTTP结果 = remote_server|[远程兼容HTTP请求], 
    请求地址: "https://httpbin.org/json", 
    请求方法: "GET"

[打印], 内容: "远程HTTP请求状态: ${远程HTTP结果['status_code']}"
[打印], 内容: "远程HTTP响应时间: ${远程HTTP结果['response_time']}秒"
[断言], 条件: "${远程HTTP结果['success']} == True"

# 测试远程调试模式
[打印], 内容: "=== 远程调试模式测试 ==="

远程调试结果 = remote_server|[远程兼容数据处理], 
    数据: "调试测试数据", 
    处理类型: "validate", 
    处理参数: {
        "rules": {
            "not_empty": {},
            "type_check": {"type": "str"}
        }
    }, 
    调试模式: True

[打印], 内容: "远程调试信息: ${远程调试结果['debug_info']}"
[断言], 条件: "${远程调试结果['debug_info']} != null"

# 测试远程错误处理
[打印], 内容: "=== 远程错误处理测试 ==="

远程错误测试 = remote_server|[远程兼容文件操作], 
    操作类型: "read", 
    文件路径: "/不存在的路径/不存在的文件.txt"

[打印], 内容: "远程错误处理结果: ${远程错误测试}"
[断言], 条件: "${远程错误测试['success']} == False"
[断言], 条件: "'文件不存在' in ${远程错误测试['error']}"

# 性能对比测试
[打印], 内容: "=== 性能对比测试 ==="

# 本地执行多次操作
本地开始时间 = [获取当前时间戳]
for i in range(5) do
    本地结果 = [远程兼容数据处理], 
        数据: "性能测试数据${i}", 
        处理类型: "transform", 
        处理参数: {"type": "upper"}
end
本地结束时间 = [获取当前时间戳]
本地耗时 = ${本地结束时间} - ${本地开始时间}

# 远程执行相同操作
远程开始时间 = [获取当前时间戳]
for i in range(5) do
    远程结果 = remote_server|[远程兼容数据处理], 
        数据: "性能测试数据${i}", 
        处理类型: "transform", 
        处理参数: {"type": "upper"}
end
远程结束时间 = [获取当前时间戳]
远程耗时 = ${远程结束时间} - ${远程开始时间}

[打印], 内容: "本地执行耗时: ${本地耗时}毫秒"
[打印], 内容: "远程执行耗时: ${远程耗时}毫秒"
[打印], 内容: "远程执行开销: ${远程耗时 - 本地耗时}毫秒"

# 清理测试文件
[打印], 内容: "=== 清理测试文件 ==="

本地清理 = [远程兼容文件操作], 操作类型: "delete", 文件路径: "local_test.txt"
远程清理 = remote_server|[远程兼容文件操作], 操作类型: "delete", 文件路径: "remote_test.txt"

[打印], 内容: "本地文件清理: ${本地清理['success']}"
[打印], 内容: "远程文件清理: ${远程清理['success']}"

[打印], 内容: "=== 远程执行测试完成 ==="
